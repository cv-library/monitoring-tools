x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/loki/api/v1/push'
    loki-tenant-id: 'plataforma'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: "3.4"
services:
  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data
    logging: *default-logging
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    volumes:
      - ./config/grafana/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./config/grafana/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/grafana-provisioning-datasources.yaml:ro
      - ./dashboards/observability_multitenancy.json:/var/lib/grafana/dashboards/observability_multitenancy.json
      - ./dashboards/cadvisor_insights.json:/var/lib/grafana/dashboards/cadvisor_insights.json:ro
      - ./dashboards/node_exporter.json:/var/lib/grafana/dashboards/node_exporter.json:ro
    ports:
      - 9000:3000
    logging: *default-logging
  prometheus-resume-library:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus/prometheus-resume-library.yaml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/rules.yaml:/etc/prometheus/rules.yaml
    ports:
      - 9090:9090
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    logging: *default-logging
  prometheus-cv-library:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus/prometheus-cv-library.yaml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/rules.yaml:/etc/prometheus/rules.yaml
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    logging: *default-logging        
  load-balancer:
    image: nginx:latest
    volumes:
      - ./config/loadbalancer/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    ports:
      - 9009:9009
    logging: *default-logging
  mimir-1:
    image: grafana/mimir:2.11.0
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./config/mimir/mimir.yaml:/etc/mimir.yaml
      - ./config/mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data
    logging: *default-logging
  mimir-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: grafana/mimir:2.11.0
    depends_on:
      - minio
    volumes:
      - ./config/mimir/mimir.yaml:/etc/mimir.yaml
      - ./config/mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data
    logging: *default-logging
  mimir-3:
    image: grafana/mimir:2.11.0
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./config/mimir/mimir.yaml:/etc/mimir.yaml
      - ./config/mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-3-data:/data
    logging: *default-logging
  tempo:
    image: grafana/tempo:2.2.0-rc.0
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    command: [  "-multitenancy.enabled=true", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - "./config/tempo/tempo.yaml:/etc/tempo.yaml"
  loki:
    image: grafana/loki:2.8.3
    volumes:
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    logging: *default-logging
  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "55679:55679"
    volumes:
      - ./config/otel/otel.yml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml"]

volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data:
